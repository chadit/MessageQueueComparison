services:
  nats1:
    image: nats:latest
    container_name: nats1
    volumes:
      - nats1-data:/data
    ports:
      - "4222:4222" # Client connections
      - "6222:6222" # Cluster communication
      - "8222:8222" # Monitoring
    command:
      - "--server_name=nats1"
      - "--cluster_name=nats_cluster"
      - "--store_dir=/data"
      - "--cluster=nats://nats1:6222"
      - "--routes=nats-route://nats1:6222,nats-route://nats2:6222,nats-route://nats3:6222"
      - "-m=8222"
      - "--jetstream"
    restart: always

  nats2:
    image: nats:latest
    container_name: nats2
    volumes:
      - nats2-data:/data
    ports:
      - "4223:4222" # Expose client port on a different host port
      - "6223:6222"
      - "8223:8222"
    command:
      - "--server_name=nats2"
      - "--cluster_name=nats_cluster"
      - "--store_dir=/data"
      - "--cluster=nats://nats2:6222"
      - "--routes=nats-route://nats1:6222,nats-route://nats2:6222,nats-route://nats3:6222"
      - "-m=8222"
      - "--jetstream"
    restart: always

  nats3:
    image: nats:latest
    container_name: nats3
    volumes:
      - nats3-data:/data
    ports:
      - "4224:4222" # Expose client port on a different host port
      - "6224:6222"
      - "8224:8222"
    command:
      - "--server_name=nats3"
      - "--cluster_name=nats_cluster"
      - "--store_dir=/data"
      - "--cluster=nats://nats3:6222"
      - "--routes=nats-route://nats1:6222,nats-route://nats2:6222,nats-route://nats3:6222"
      - "-m=8222"
      - "--jetstream"
    restart: always

  controller:
    build:
      context: .
      dockerfile: go/cmd/nats-jetstream/controller/Dockerfile
    container_name: controller
    depends_on:
      - nats1
      - nats2
      - nats3
    environment:
      - NATS_BROKER=nats://nats1:4222,nats://nats2:4222,nats://nats3:4222
    ports:
      - "50051:50051"
    command: ["sh", "-c", "sleep 40 && ./controller"]
    restart: always

  client1:
    build:
      context: .
      dockerfile: go/cmd/client/Dockerfile
    container_name: client1
    depends_on:
      - nats1
      - nats2
      - nats3
      - controller
      - consumer1
      # - consumer2
    environment:
      - GRPC_SERVER_ADDRESS=controller:50051
    command: ["sh", "-c", "sleep 40 && ./client"]
    restart: always

  consumer1:
    build:
      context: .
      dockerfile: go/cmd/nats-jetstream/consumer/Dockerfile
    container_name: consumer1
    depends_on:
      - nats1
      - nats2
      - nats3
      - controller
    environment:
      - NAMESPACE=mia1
      - NATS_BROKER=nats://nats1:4222,nats://nats2:4222,nats://nats3:4222
      - GROUP_ID=conumer1 # group id can be host name or
      - SUPPORTED_EVENTS=create,deploy,clone,delete,list
      - SIMULATE_FAILURE=false
    command: ["sh", "-c", "sleep 30 && ./consumer"]
    restart: always

  consumer2:
    build:
      context: .
      dockerfile: go/cmd/nats-jetstream/consumer/Dockerfile
    container_name: consumer2
    depends_on:
      - nats1
      - nats2
      - nats3
      - controller
    environment:
      - NAMESPACE=mia1
      - NATS_BROKER=nats://nats1:4222,nats://nats2:4222,nats://nats3:4222
      - GROUP_ID=conumer2
      - SUPPORTED_EVENTS=create,deploy,clone,delete,list
      - SIMULATE_FAILURE=false
    command: ["sh", "-c", "sleep 30 && ./consumer"]
    restart: always

volumes:
  nats1-data:
  nats2-data:
  nats3-data:
